[{"C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\App.js":"1","C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\index.js":"2","C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\newApp.js":"3","C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\newApp2.js":"4","C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\newApp3.js":"5","C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\App4.js":"6","C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\components\\Icons.js":"7","C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\context\\index.js":"8"},{"size":16499,"mtime":1644222771384,"results":"9","hashOfConfig":"10"},{"size":4022,"mtime":1646304736381,"results":"11","hashOfConfig":"12"},{"size":14489,"mtime":1606832481155,"results":"13","hashOfConfig":"10"},{"size":4555,"mtime":1646297541110,"results":"14","hashOfConfig":"12"},{"size":11209,"mtime":1644681546675,"results":"15","hashOfConfig":"10"},{"size":13623,"mtime":1646767185372,"results":"16","hashOfConfig":"12"},{"size":2314,"mtime":1644830625090,"results":"17","hashOfConfig":"10"},{"size":528,"mtime":1646499797023,"results":"18","hashOfConfig":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xfv3s0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"y77i53",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":8,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\App.js",[],"C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\index.js",["37","38"],"import React, { useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './newApp';\nimport App from './App4';\n// import newApp3 from './newApp3';\n// import App from './newApp2';\n\n// import reportWebVitals from './reportWebVitals';\n\n// import {\n//    Transition,\n//    CSSTransition,\n//    TransitionGroup,\n// } from 'react-transition-group';\n\n// function Example() {\n//    const [showButton, setShowButton] = useState(true);\n//    const [showMessage, setShowMessage] = useState(false);\n//    return (\n//       <>\n//          <button onClick={() => setShowMessage(true)}>click me</button>\n//          <CSSTransition\n//             in={showMessage}\n//             timeout={300}\n//             classNames=\"alert\"\n//             // unmountOnExit\n//             // onEnter={() => setShowButton(false)}\n//             // onExited={() => setShowButton(true)}\n//          >\n//             <div className=\"abs\">\n//                <div>\n//                   This alert message is being transitioned in and out of the\n//                   DOM.\n//                </div>\n//                <button onClick={() => setShowMessage(false)}>Close</button>\n//             </div>\n//          </CSSTransition>\n//       </>\n//       //   <CSSTransition/>\n//    );\n// }\n\n// function Testing() {\n//    const [click, setClick] = useState(false);\n//    const div = useRef(null);\n//    return (\n//       // <div className=\"container\">\n//       <>\n//          <button onClick={() => setClick(!click)}>click me</button>\n//          {console.log(click)}\n//          <CSSTransition\n//             in={click}\n//             classNames=\"rotate\"\n//             timeout={10000}\n//             // onEnter={() => console.log('onEnter')}\n//             // onEntering={() => console.log('onEntering')}\n//             onEntered={() => console.log('entered')}\n//             // addEndListener={(node, done) => {\n//             //    node.addEventListener('transitionend', done, false);\n//             //    // node.addEventListener('transitionend', done, false);\n//             // }}\n//             // exit={false}\n//             // enter={false}\n//             // onEntered={}\n//          >\n//             <div className=\"box\" ref={div}>\n//                hello\n//             </div>\n//          </CSSTransition>\n//       </>\n//       // </div>\n//    );\n// }\n// const duration = 300;\n\n// const defaultStyle = {\n//    transition: `opacity ${duration}ms ease-in-out`,\n//    opacity: 0,\n// };\n\n// const transitionStyles = {\n//    entering: { opacity: 1 },\n//    entered: { opacity: 1 },\n//    exiting: { opacity: 0 },\n//    exited: { opacity: 0 },\n// };\n// const Fade = ({ in: inProp }) => (\n//    <Transition in={inProp} timeout={duration}>\n//       {state => (\n//          <div\n//             style={{\n//                ...defaultStyle,\n//                ...transitionStyles[state],\n//             }}\n//          >\n//             I'm a fade Transition!\n//          </div>\n//       )}\n//    </Transition>\n// );\n// // function App() {\n// //    const [inProp, setInProp] = useState(false);\n// //    return (\n// //       <div>\n// //          <Transition in={inProp} timeout={500}>\n// //             {state => (\n// //                <div\n// //                   style={{\n// //                      ...defaultStyle,\n// //                      ...transitionStyles[state],\n// //                   }}\n// //                >\n// //                   I'm a fade Transition!\n// //                </div>\n// //             )}\n// //          </Transition>\n// //          <button onClick={() => setInProp(!inProp)}>Click to Enter</button>\n// //       </div>\n// //    );\n// // }\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\newApp.js",[],"C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\newApp2.js",["39","40","41","42"],"C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\newApp3.js",["43","44","45","46","47","48","49","50","51","52","53","54","55","56"],"import React, { useState } from 'react';\r\nimport './newApp3.css';\r\n// import RotateSvgLeft from './assets/arrow_direction_email_left_reply_icon.svg';\r\n// import RotateSvgRight from './assets/arrow_email_forward_message_right_icon.svg';\r\n// import RotateSvgTop from './assets/svgtop.svg';\r\n// import RotateSvgRight from './assets/down-arrow-8119.svg';\r\n// import RotateSvgLeft from './assets/left-arrow-8118.svg';\r\nimport LeftColSvgClock from './assets/left-arrow-left.svg';\r\nimport LeftColSvgCounter from './assets/down-arrow-left.svg';\r\n\r\nimport clockTopLeft from './assets/top/clock-arrow-left.svg';\r\nimport counterTopLeft from './assets/top/counter-arrow-left.svg';\r\nimport clockTopRight from './assets/top/clock-arrow-right.svg';\r\nimport counterTopRight from './assets/top/counter-arrow-right.svg';\r\n\r\nimport clockBottomLeft from './assets/bottom/clock-arrow-left.svg';\r\nimport counterBottomLeft from './assets/bottom/counter-arrow-left.svg';\r\nimport clockBottomRight from './assets/bottom/clock-arrow-right.svg';\r\nimport counterBottomRight from './assets/bottom/counter-arrow-right.svg';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction Circle(props) {\r\n   return (\r\n      <div\r\n         className={`circle ${props.color}`}\r\n         onClick={() => props.click()}\r\n      ></div>\r\n   );\r\n}\r\n\r\nconst classNames = {\r\n   left: ['left', 'top', 'bottom6', 'bottom0 left'],\r\n   righ: [],\r\n};\r\n\r\nfunction Quad({ quad, onClick }) {\r\n   // const [quad, setQuad] = useState(Array(9).fill(0));\r\n   // console.log(RotateIcon);\r\n   // const handleClick = () => {\r\n   //    let newQuad = quad.slice();\r\n   //    // newQuad[i] = setQuad(newQuad);\r\n   // };\r\n   return (\r\n      <div className={'quad'}>\r\n         {/* {RotateIcon()} */}\r\n         {quad.map((val, i) => {\r\n            // console.log(props.quad);\r\n            let className =\r\n               val === 0 ? 'circle' : val === 1 ? 'circle black' : 'circle red';\r\n            return (\r\n               <div\r\n                  key={i}\r\n                  className={className}\r\n                  onClick={() => onClick(i)}\r\n               ></div>\r\n            );\r\n         })}\r\n      </div>\r\n   );\r\n}\r\n\r\nfunction Roatate() {}\r\n\r\nfunction LeftRotation(props) {\r\n   return (\r\n      <>\r\n         <div className=\"rotate-container\">\r\n            <img\r\n               className={'left'}\r\n               src={counterTopLeft}\r\n               onClick={() => props.onClick('counter', 0)}\r\n            />\r\n            <img\r\n               className={'top'}\r\n               src={clockTopLeft}\r\n               onClick={() => props.onClick('clock', 0)}\r\n            />\r\n         </div>\r\n         <div className=\"rotate-container\">\r\n            <img\r\n               className={'bottom6'}\r\n               src={counterBottomLeft}\r\n               onClick={() => props.onClick('counter', 1)}\r\n            />\r\n            <img\r\n               className={'bottom0 left'}\r\n               src={clockBottomLeft}\r\n               onClick={() => props.onClick('clock', 1)}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n}\r\nfunction RightRotation(props) {\r\n   return (\r\n      <>\r\n         <div className=\"rotate-container\">\r\n            <img\r\n               className={'right6'}\r\n               src={clockTopRight}\r\n               onClick={() => props.onClick()}\r\n            />\r\n            <img\r\n               className={'top right0'}\r\n               src={counterTopRight}\r\n               onClick={() => props.onClick()}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"rotate-container\">\r\n            <img\r\n               className={'right0 bottom6'}\r\n               src={clockBottomRight}\r\n               onClick={() => props.onClick()}\r\n            />\r\n            <img\r\n               className={'right6 bottom0'}\r\n               src={counterBottomRight}\r\n               onClick={() => props.onClick()}\r\n            />\r\n         </div>\r\n      </>\r\n   );\r\n}\r\n\r\nfunction Board(props) {\r\n   let boardDataStructure = {\r\n      col1: [makeQuad(), makeQuad()],\r\n\r\n      col2: [makeQuad(), makeQuad()],\r\n   };\r\n   const [col1, setCol1] = useState(boardDataStructure.col1);\r\n   const [col2, setCol2] = useState(boardDataStructure.col2);\r\n   const [player, setPlayer] = useState({ isBlack: true });\r\n\r\n   const [rotate, setRotate] = useState({ rotation: '', rowIndex: '' });\r\n\r\n   const [rotated, setRotated] = useState([\r\n      [false, false],\r\n      [false, false],\r\n   ]);\r\n\r\n   const handleClickCol1 = (circle, rowIndex) => {\r\n      // 1 is black 2 is red\r\n      let newCol = col1.map((rowArr, i) => {\r\n         if (i === rowIndex) {\r\n            return rowArr.map((val, i) =>\r\n               i === circle ? (player.isBlack ? 1 : 2) : val\r\n            );\r\n            // rowArr[circle] = player.isBlack ? 1 : 2;\r\n         }\r\n         return rowArr;\r\n      });\r\n      console.log(col1, newCol);\r\n      setCol1(newCol);\r\n      setPlayer({ isBlack: !player.isBlack });\r\n   };\r\n   const handleClickCol2 = (circle, rowIndex) => {\r\n      let newCol = col2.map((rowArr, i) => {\r\n         if (i === rowIndex) {\r\n            return rowArr.map((val, i) =>\r\n               i === circle ? (player.isBlack ? 1 : 2) : val\r\n            );\r\n\r\n            // rowArr[circle] = player.isBlack ? 1 : 2;\r\n         }\r\n         return rowArr;\r\n      });\r\n      setCol2(newCol);\r\n      setPlayer({ isBlack: !player.isBlack });\r\n   };\r\n\r\n   // const handleClick = (circleIndex, quadIndex) => {\r\n   //    setBoardArray(arr => {\r\n   //       return arr[quadIndex].map((val, i) => {\r\n   //          if (i === circleIndex) return player.isBlack ? 1 : 2;\r\n   //       });\r\n   //    });\r\n   //    setPlayer(({ isBlack }) => !isBlack);\r\n   // };\r\n\r\n   const rotateClick1 = (rotation, rowIndex) => {\r\n      let normalizedQuad = [];\r\n      let index = 0;\r\n      let rotatedQuad = [];\r\n      console.log(col1, rowIndex);\r\n      for (let i = 0; i < 3; i++) {\r\n         normalizedQuad[i] = [];\r\n         for (let j = 0; j < 3; j++) {\r\n            normalizedQuad[i][j] = col1[rowIndex][index];\r\n            index++;\r\n         }\r\n      }\r\n\r\n      for (let k = 0; k < normalizedQuad.length; k++) {\r\n         let k2 = normalizedQuad.length - 1 - k;\r\n         rotatedQuad[k] = [];\r\n         for (let n = 0; n < normalizedQuad.length; n++) {\r\n            let n2 = normalizedQuad.length - 1 - n;\r\n            if (rotation === 'clock') {\r\n               rotatedQuad[k][n] = normalizedQuad[n2][k];\r\n            } else {\r\n               rotatedQuad[k][n] = normalizedQuad[n][k2]; //2,0 => 2,2   k=2 , k2=0 n=0,n2=2\r\n            }\r\n         }\r\n      }\r\n      setCol1(col1 =>\r\n         col1.map((quad, i) => (i === rowIndex ? rotatedQuad.flat() : quad))\r\n      );\r\n      // TODO : CHECK OUT WHATH THE HELL IS THIS\r\n      // matrix[0].map((val, index) => matrix.map(row => row[index]).reverse());\r\n   };\r\n   const rotateClick2 = (rotation, rowIndex) => {};\r\n   console.log(col1);\r\n   const board = (\r\n      <div className=\"board\">\r\n         <div className=\"col-container\">\r\n            <LeftRotation\r\n               onClick={(rotation, rowIndex) => {\r\n                  // rotateClick1(rotation, rowIndex)\r\n                  setRotate({ rotation, rowIndex });\r\n                  setRotated(rotated => {\r\n                     return rotated.map((arr, i) => {\r\n                        if (i === 0) {\r\n                           return arr.map((val, i) =>\r\n                              i === rowIndex ? !val : val\r\n                           );\r\n                        }\r\n                        return arr;\r\n                     });\r\n                  });\r\n               }}\r\n            />\r\n            <div className=\"col\">\r\n               {\r\n                  // col1.map((rowArr, rowIndex) => {\r\n                  //    return (\r\n                  //       <>\r\n                  //          {/* <RotateIcon /> */}\r\n                  //          <Quad\r\n                  //             quad={rowArr}\r\n                  //             key={rowIndex}\r\n                  //             onClick={circle => handleClickCol1(circle, rowIndex)}\r\n                  //          ></Quad>\r\n                  //       </>\r\n                  //    );\r\n                  // })\r\n               }\r\n               <CSSTransition\r\n                  in={rotated[0][0]}\r\n                  classNames={'rotate'}\r\n                  addEndListener={(node, done) => {\r\n                     node.addEventListener('transitionend', done, false);\r\n                  }}\r\n                  onEntered={() =>\r\n                     rotateClick1(rotate.rotation, rotate.rowIndex)\r\n                  }\r\n                  onExited={() =>\r\n                     rotateClick1(rotate.rotation, rotate.rowIndex)\r\n                  }\r\n               >\r\n                  <Quad\r\n                     quad={col1[0]}\r\n                     onClick={circleIndex => handleClickCol1(circleIndex, 0)}\r\n                  />\r\n               </CSSTransition>\r\n               <CSSTransition\r\n                  in={rotated[0][1]}\r\n                  classNames={'rotate'}\r\n                  addEndListener={(node, done) => {\r\n                     node.addEventListener('transitionend', done, false);\r\n                  }}\r\n                  onEntered={() =>\r\n                     rotateClick1(rotate.rotation, rotate.rowIndex)\r\n                  }\r\n                  onExited={() =>\r\n                     rotateClick1(rotate.rotation, rotate.rowIndex)\r\n                  }\r\n               >\r\n                  <Quad\r\n                     quad={col1[1]}\r\n                     onClick={circleIndex => handleClickCol1(circleIndex, 1)}\r\n                  />\r\n               </CSSTransition>\r\n            </div>\r\n         </div>\r\n         {/* //=============right */}\r\n         <div className=\"col-container\">\r\n            <RightRotation\r\n               onClick={(rotation, rowIndex) =>\r\n                  rotateClick2(rotation, rowIndex)\r\n               }\r\n            />\r\n            <div className=\"col\">\r\n               {\r\n                  // col2.map((rowArr, rowIndex) => {\r\n                  //    return (\r\n                  //       <Quad\r\n                  //          quad={rowArr}\r\n                  //          key={rowIndex}\r\n                  //          onClick={circle => handleClickCol2(circle, rowIndex)}\r\n                  //       ></Quad>\r\n                  //    );\r\n                  // })\r\n               }\r\n               <Quad\r\n                  quad={col2[0]}\r\n                  onClick={circleIndex => handleClickCol2(circleIndex, 0)}\r\n               />\r\n               <Quad\r\n                  quad={col2[1]}\r\n                  onClick={circleIndex => handleClickCol2(circleIndex, 1)}\r\n               />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n\r\n   return board;\r\n}\r\n\r\nconst newApp3 = () => {\r\n   return <Board />;\r\n};\r\n\r\n//==============\r\nfunction makeBoard() {\r\n   let board = [];\r\n   for (var i = 0; i < 4; i++) {\r\n      board[i] = [];\r\n      for (var j = 0; j < 9; j++) {\r\n         board[i][j] = 0;\r\n      }\r\n   }\r\n\r\n   return board;\r\n}\r\nfunction makeQuad() {\r\n   let quad = [];\r\n   for (var i = 0; i < 9; i++) {\r\n      quad[i] = 0;\r\n   }\r\n   return quad;\r\n}\r\n//=====================\r\nexport default newApp3;\r\n","C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\App4.js",["57","58","59","60","61"],"C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\components\\Icons.js",["62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],"C:\\xampp\\htdocs\\myprojects\\pentago\\pentago\\src\\context\\index.js",[],{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"88","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":33},{"ruleId":"84","severity":1,"message":"89","line":77,"column":7,"nodeType":"86","messageId":"87","endLine":77,"endColumn":12},{"ruleId":"84","severity":1,"message":"90","line":94,"column":7,"nodeType":"86","messageId":"87","endLine":94,"endColumn":13},{"ruleId":"84","severity":1,"message":"91","line":157,"column":7,"nodeType":"86","messageId":"87","endLine":157,"endColumn":18},{"ruleId":"84","severity":1,"message":"92","line":167,"column":11,"nodeType":"86","messageId":"87","endLine":167,"endColumn":16},{"ruleId":"84","severity":1,"message":"93","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":23},{"ruleId":"84","severity":1,"message":"94","line":9,"column":8,"nodeType":"86","messageId":"87","endLine":9,"endColumn":25},{"ruleId":"84","severity":1,"message":"95","line":22,"column":10,"nodeType":"86","messageId":"87","endLine":22,"endColumn":16},{"ruleId":"84","severity":1,"message":"96","line":31,"column":7,"nodeType":"86","messageId":"87","endLine":31,"endColumn":17},{"ruleId":"84","severity":1,"message":"97","line":62,"column":10,"nodeType":"86","messageId":"87","endLine":62,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":68,"column":13,"nodeType":"100","endLine":72,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":73,"column":13,"nodeType":"100","endLine":77,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":80,"column":13,"nodeType":"100","endLine":84,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":85,"column":13,"nodeType":"100","endLine":89,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":98,"column":13,"nodeType":"100","endLine":102,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":103,"column":13,"nodeType":"100","endLine":107,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":111,"column":13,"nodeType":"100","endLine":115,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":116,"column":13,"nodeType":"100","endLine":120,"endColumn":15},{"ruleId":"84","severity":1,"message":"101","line":327,"column":10,"nodeType":"86","messageId":"87","endLine":327,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":85,"column":10,"nodeType":"100","endLine":89,"endColumn":12},{"ruleId":"98","severity":1,"message":"99","line":90,"column":10,"nodeType":"100","endLine":94,"endColumn":12},{"ruleId":"84","severity":1,"message":"102","line":139,"column":7,"nodeType":"86","messageId":"87","endLine":139,"endColumn":12},{"ruleId":"103","severity":1,"message":"104","line":157,"column":45,"nodeType":"105","endLine":157,"endColumn":56,"suggestions":"106"},{"ruleId":"84","severity":1,"message":"107","line":373,"column":8,"nodeType":"86","messageId":"87","endLine":373,"endColumn":19},{"ruleId":"84","severity":1,"message":"108","line":13,"column":7,"nodeType":"86","messageId":"87","endLine":13,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":16,"column":10,"nodeType":"100","endLine":20,"endColumn":12},{"ruleId":"109","severity":2,"message":"110","line":19,"column":28,"nodeType":"86","messageId":"111","endLine":19,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":21,"column":10,"nodeType":"100","endLine":25,"endColumn":12},{"ruleId":"109","severity":2,"message":"110","line":24,"column":28,"nodeType":"86","messageId":"111","endLine":24,"endColumn":40},{"ruleId":"84","severity":1,"message":"112","line":30,"column":7,"nodeType":"86","messageId":"87","endLine":30,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":33,"column":10,"nodeType":"100","endLine":37,"endColumn":12},{"ruleId":"109","severity":2,"message":"110","line":36,"column":28,"nodeType":"86","messageId":"111","endLine":36,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":38,"column":10,"nodeType":"100","endLine":42,"endColumn":12},{"ruleId":"109","severity":2,"message":"110","line":41,"column":28,"nodeType":"86","messageId":"111","endLine":41,"endColumn":40},{"ruleId":"84","severity":1,"message":"113","line":46,"column":7,"nodeType":"86","messageId":"87","endLine":46,"endColumn":22},{"ruleId":"98","severity":1,"message":"99","line":49,"column":10,"nodeType":"100","endLine":53,"endColumn":12},{"ruleId":"109","severity":2,"message":"110","line":52,"column":28,"nodeType":"86","messageId":"111","endLine":52,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":54,"column":10,"nodeType":"100","endLine":58,"endColumn":12},{"ruleId":"109","severity":2,"message":"110","line":57,"column":28,"nodeType":"86","messageId":"111","endLine":57,"endColumn":40},{"ruleId":"84","severity":1,"message":"114","line":62,"column":7,"nodeType":"86","messageId":"87","endLine":62,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":65,"column":10,"nodeType":"100","endLine":69,"endColumn":12},{"ruleId":"109","severity":2,"message":"110","line":68,"column":28,"nodeType":"86","messageId":"111","endLine":68,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":70,"column":10,"nodeType":"100","endLine":74,"endColumn":12},{"ruleId":"109","severity":2,"message":"110","line":73,"column":28,"nodeType":"86","messageId":"111","endLine":73,"endColumn":40},{"ruleId":"84","severity":1,"message":"115","line":79,"column":7,"nodeType":"86","messageId":"87","endLine":79,"endColumn":21},{"ruleId":"84","severity":1,"message":"116","line":80,"column":10,"nodeType":"86","messageId":"87","endLine":80,"endColumn":15},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Child' is assigned a value but never used.","'Parent' is assigned a value but never used.","'GrandParent' is assigned a value but never used.","'click' is assigned a value but never used.","'LeftColSvgClock' is defined but never used.","'LeftColSvgCounter' is defined but never used.","'Circle' is defined but never used.","'classNames' is assigned a value but never used.","'Roatate' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeBoard' is defined but never used.","'dummy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'makeBoard'. Either exclude it or remove the dependency array. Outer scope values like 'makeBoard' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["117"],"'quadReduced' is assigned a value but never used.","'TopLeftIcons' is assigned a value but never used.","no-undef","'handleRotate' is not defined.","undef","'TopRightIcons' is assigned a value but never used.","'BottomLeftIcons' is assigned a value but never used.","'BottomRightIcons' is assigned a value but never used.","'IconsComponent' is assigned a value but never used.","'Icons' is assigned a value but never used.",{"desc":"118","fix":"119"},"Update the dependencies array to be: []",{"range":"120","text":"121"},[4937,4948],"[]"]